#include "ros/ros.h"
#include "std_msgs/String.h"
#include "geometry_msgs/PoseStamped.h"
#include <sstream>

int main(int argc, char **argv){
  ros::init(argc, argv, "talker");
  ros::NodeHandle n;

  ros::Publisher chatter_pub = n.advertise<geometry_msgs::PoseStamped>("/mavros/setpoint_position/local", 1000);
  ros::Rate loop_rate(5);

  long count = 0;
  int idx = 0;

  const int rows = 3;
  const int cols = 110;

  double path[rows][cols] = {
      {
          10, 10, 10.5419, 11.0105, 11.3427, 11.4936, 11.4427, 11.197, 10.7896, 10.2756, 9.72438, 9.21035, 8.80297, 8.55726, 8.5064, 8.65726, 8.98946, 9.45814, 10, 10, 10.3612, 10.6737, 10.8952, 10.9957, 10.9618, 10.798, 10.5264, 10.1837, 9.81625, 9.47357, 9.20198, 9.03817, 9.00427, 9.10484, 9.3263, 9.63876, 10, 10, 10.1806, 10.3368, 10.4476, 10.4979, 10.4809, 10.399, 10.2632, 10.0919, 9.90812, 9.73678, 9.60099, 9.51909, 9.50213, 9.55242, 9.66315, 9.81938, 10, 10, 10, 10.5419, 11.0105, 11.3427, 11.4936, 11.4427, 11.197, 10.7896, 10.2756, 9.72438, 9.21035, 8.80297, 8.55726, 8.5064, 8.65726, 8.98946, 9.45814, 10, 10, 10.5419, 11.0105, 11.3427, 11.4936, 11.4427, 11.197, 10.7896, 10.2756, 9.72438, 9.21035, 8.80297, 8.55726, 8.5064, 8.65726, 8.98946, 9.45814, 10, 10, 10.5419, 11.0105, 11.3427, 11.4936, 11.4427, 11.197, 10.7896, 10.2756, 9.72438, 9.21035, 8.80297, 8.55726, 8.5064, 8.65726, 8.98946, 9.45814, 10
      },
      {
          10, 11.5, 11.3987, 11.1085, 10.6686, 10.1384, 9.58951, 9.09605, 8.72467, 8.52554, 8.52554, 8.72467, 9.09605, 9.58951, 10.1384, 10.6686, 11.1085, 11.3987, 11.5, 11, 10.9325, 10.739, 10.4457, 10.0923, 9.72634, 9.39737, 9.14978, 9.01703, 9.01703, 9.14978, 9.39737, 9.72634, 10.0923, 10.4457, 10.739, 10.9325, 11, 10.5, 10.4662, 10.3695, 10.2229, 10.0461, 9.86317, 9.69868, 9.57489, 9.50851, 9.50851, 9.57489, 9.69868, 9.86317, 10.0461, 10.2229, 10.3695, 10.4662, 10.5, 11.5, 11.5, 11.3987, 11.1085, 10.6686, 10.1384, 9.58951, 9.09605, 8.72467, 8.52554, 8.52554, 8.72467, 9.09605, 9.58951, 10.1384, 10.6686, 11.1085, 11.3987, 11.5, 11.5, 11.3987, 11.1085, 10.6686, 10.1384, 9.58951, 9.09605, 8.72467, 8.52554, 8.52554, 8.72467, 9.09605, 9.58951, 10.1384, 10.6686, 11.1085, 11.3987, 11.5, 11.5, 11.3987, 11.1085, 10.6686, 10.1384, 9.58951, 9.09605, 8.72467, 8.52554, 8.52554, 8.72467, 9.09605, 9.58951, 10.1384, 10.6686, 11.1085, 11.3987, 11.5
      },
      {
          11, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
      }
  };

  while (ros::ok()){
    geometry_msgs::PoseStamped msg;
    
    msg.header.stamp = ros::Time::now();
    msg.header.frame_id = "map";

   if (count % 2 == 0 && count > 50 && idx < cols){
      idx++;
   }

    msg.pose.position.x = path[0][idx];
    msg.pose.position.y = path[1][idx];
    msg.pose.position.z = path[2][idx];

    msg.pose.orientation.x = 0.0;
    msg.pose.orientation.y = 0.0;
    msg.pose.orientation.z = 0.0; 
    msg.pose.orientation.w = 0.0;

    chatter_pub.publish(msg);
    ros::spinOnce();

    loop_rate.sleep();
    count++;
  }
  return 0;
}
