[35m[1mScanning dependencies of target test_fiesta[0m
[35m[1mScanning dependencies of target fiesta[0m
[ 27%] [32mBuilding CXX object CMakeFiles/fiesta.dir/src/timing.cc.o[0m
[ 27%] [32mBuilding CXX object CMakeFiles/fiesta.dir/src/parameters.cpp.o[0m
[ 27%] [32mBuilding CXX object CMakeFiles/fiesta.dir/src/raycast.cpp.o[0m
[ 36%] [32mBuilding CXX object CMakeFiles/fiesta.dir/src/ESDFMap.cpp.o[0m
[ 45%] [32mBuilding CXX object CMakeFiles/test_fiesta.dir/src/parameters.cpp.o[0m
[ 63%] [32mBuilding CXX object CMakeFiles/test_fiesta.dir/src/raycast.cpp.o[0m
[ 54%] [32mBuilding CXX object CMakeFiles/test_fiesta.dir/src/timing.cc.o[0m
[ 72%] [32mBuilding CXX object CMakeFiles/test_fiesta.dir/src/ESDFMap.cpp.o[0m
[ 81%] [32mBuilding CXX object CMakeFiles/test_fiesta.dir/test/test_fiesta.cpp.o[0m
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:[m[K In member function â€˜[01m[Kbool fiesta::ESDFMap::CheckConsistency()[m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:877:34:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around â€˜[01m[K&&[m[Kâ€™ within â€˜[01m[K||[m[Kâ€™ [[01;35m[K-Wparentheses[m[K]
  877 |     if (prev_[vox] != undefined_ && next_[prev_[vox]] != vox
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:[m[K In member function â€˜[01m[Kbool fiesta::ESDFMap::CheckConsistency()[m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:877:34:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around â€˜[01m[K&&[m[Kâ€™ within â€˜[01m[K||[m[Kâ€™ [[01;35m[K-Wparentheses[m[K]
  877 |     if (prev_[vox] != undefined_ && next_[prev_[vox]] != vox
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:[m[K In member function â€˜[01m[Kbool fiesta::ESDFMap::CheckWithGroundTruth()[m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:954:40:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kmax2[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  954 |   double ems1 = 0, ems2 = 0, max1 = 0, [01;35m[Kmax2[m[K = 0;
      |                                        [01;35m[K^~~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:[m[K In member function â€˜[01m[Kbool fiesta::ESDFMap::CheckWithGroundTruth()[m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:954:40:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kmax2[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  954 |   double ems1 = 0, ems2 = 0, max1 = 0, [01;35m[Kmax2[m[K = 0;
      |                                        [01;35m[K^~~~[m[K
In file included from [01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:5[m[K:
/home/matt/catkin_ws/src/survey_planner/FIESTA/include/ESDFMap.h: In instantiation of â€˜[01m[Kstd::size_t fiesta::MatrixHash<transform_>::operator()(const transform_&) const [with transform_ = Eigen::Matrix<int, 3, 1>; std::size_t = long unsigned int][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/hashtable_policy.h:1384:16:[m[K   required from â€˜[01m[Kstd::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::_M_hash_code(const _Key&) const [with _Key = Eigen::Matrix<int, 3, 1>; _Value = std::pair<const Eigen::Matrix<int, 3, 1>, int>; _ExtractKey = std::__detail::_Select1st; _H1 = fiesta::MatrixHash<Eigen::Matrix<int, 3, 1> >; _H2 = std::__detail::_Mod_range_hashing; std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code = long unsigned int][m[Kâ€™
[01m[K/usr/include/c++/9/bits/hashtable.h:1452:19:[m[K   required from â€˜[01m[Kstd::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::find(const key_type&) [with _Key = Eigen::Matrix<int, 3, 1>; _Value = std::pair<const Eigen::Matrix<int, 3, 1>, int>; _Alloc = std::allocator<std::pair<const Eigen::Matrix<int, 3, 1>, int> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Eigen::Matrix<int, 3, 1> >; _H1 = fiesta::MatrixHash<Eigen::Matrix<int, 3, 1> >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator = std::__detail::_Node_iterator<std::pair<const Eigen::Matrix<int, 3, 1>, int>, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = Eigen::Matrix<int, 3, 1>][m[Kâ€™
[01m[K/usr/include/c++/9/bits/unordered_map.h:922:29:[m[K   required from â€˜[01m[Kstd::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::find(const key_type&) [with _Key = Eigen::Matrix<int, 3, 1>; _Tp = int; _Hash = fiesta::MatrixHash<Eigen::Matrix<int, 3, 1> >; _Pred = std::equal_to<Eigen::Matrix<int, 3, 1> >; _Alloc = std::allocator<std::pair<const Eigen::Matrix<int, 3, 1>, int> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator = std::__detail::_Node_iterator<std::pair<const Eigen::Matrix<int, 3, 1>, int>, false, true>; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = Eigen::Matrix<int, 3, 1>][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:764:39:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/ESDFMap.h:29:26:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[KEigen::EigenBase<Eigen::Matrix<int, 3, 1> >::Index[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   29 |     for (size_t i = 0; i < matrix.size(); ++i) {
In file included from [01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:5[m[K:
/home/matt/catkin_ws/src/survey_planner/FIESTA/include/ESDFMap.h: In instantiation of â€˜[01m[Kstd::size_t fiesta::MatrixHash<transform_>::operator()(const transform_&) const [with transform_ = Eigen::Matrix<int, 3, 1>; std::size_t = long unsigned int][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/hashtable_policy.h:1384:16:[m[K   required from â€˜[01m[Kstd::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::_M_hash_code(const _Key&) const [with _Key = Eigen::Matrix<int, 3, 1>; _Value = std::pair<const Eigen::Matrix<int, 3, 1>, int>; _ExtractKey = std::__detail::_Select1st; _H1 = fiesta::MatrixHash<Eigen::Matrix<int, 3, 1> >; _H2 = std::__detail::_Mod_range_hashing; std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code = long unsigned int][m[Kâ€™
[01m[K/usr/include/c++/9/bits/hashtable.h:1452:19:[m[K   required from â€˜[01m[Kstd::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::find(const key_type&) [with _Key = Eigen::Matrix<int, 3, 1>; _Value = std::pair<const Eigen::Matrix<int, 3, 1>, int>; _Alloc = std::allocator<std::pair<const Eigen::Matrix<int, 3, 1>, int> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Eigen::Matrix<int, 3, 1> >; _H1 = fiesta::MatrixHash<Eigen::Matrix<int, 3, 1> >; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator = std::__detail::_Node_iterator<std::pair<const Eigen::Matrix<int, 3, 1>, int>, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = Eigen::Matrix<int, 3, 1>][m[Kâ€™
[01m[K/usr/include/c++/9/bits/unordered_map.h:922:29:[m[K   required from â€˜[01m[Kstd::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::find(const key_type&) [with _Key = Eigen::Matrix<int, 3, 1>; _Tp = int; _Hash = fiesta::MatrixHash<Eigen::Matrix<int, 3, 1> >; _Pred = std::equal_to<Eigen::Matrix<int, 3, 1> >; _Alloc = std::allocator<std::pair<const Eigen::Matrix<int, 3, 1>, int> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator = std::__detail::_Node_iterator<std::pair<const Eigen::Matrix<int, 3, 1>, int>, false, true>; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = Eigen::Matrix<int, 3, 1>][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/src/ESDFMap.cpp:764:39:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/ESDFMap.h:29:26:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[KEigen::EigenBase<Eigen::Matrix<int, 3, 1> >::Index[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   29 |     for (size_t i = 0; i < matrix.size(); ++i) {
[ 90%] [32m[1mLinking CXX shared library /home/matt/catkin_ws/devel/.private/fiesta/lib/libfiesta.so[0m
In file included from [01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/test/test_fiesta.cpp:1[m[K:
/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h: In instantiation of â€˜[01m[Kvoid fiesta::Fiesta<DepthMsgType, PoseMsgType>::SynchronizationAndProcess() [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:518:6:[m[K   required from â€˜[01m[Kvoid fiesta::Fiesta<DepthMsgType, PoseMsgType>::DepthCallback(const DepthMsgType&) [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:130:46:[m[K   required from â€˜[01m[Kfiesta::Fiesta<DepthMsgType, PoseMsgType>::Fiesta(ros::NodeHandle, tf::TransformListener*) [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/test/test_fiesta.cpp:7:108:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:438:12:[m[K [01;35m[Kwarning: [m[Kcatching polymorphic type â€˜[01m[Ktf::TransformException[m[Kâ€™ {aka â€˜[01m[Kclass tf2::TransformException[m[Kâ€™} by value [[01;35m[K-Wcatch-value=[m[K]
  438 |           }[01;35m[Kcatch[m[K(tf::TransformException ex){
      |            [01;35m[K^~~~~[m[K
In file included from [01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/test/test_fiesta.cpp:1[m[K:
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:406:13:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktime_delay[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  406 |      double [01;35m[Ktime_delay[m[K = 3e-3;
      |             [01;35m[K^~~~~~~~~~[m[K
/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h: In instantiation of â€˜[01m[Kvoid fiesta::Fiesta<DepthMsgType, PoseMsgType>::RaycastMultithread() [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:475:11:[m[K   required from â€˜[01m[Kvoid fiesta::Fiesta<DepthMsgType, PoseMsgType>::SynchronizationAndProcess() [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:518:6:[m[K   required from â€˜[01m[Kvoid fiesta::Fiesta<DepthMsgType, PoseMsgType>::DepthCallback(const DepthMsgType&) [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:130:46:[m[K   required from â€˜[01m[Kfiesta::Fiesta<DepthMsgType, PoseMsgType>::Fiesta(ros::NodeHandle, tf::TransformListener*) [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/test/test_fiesta.cpp:7:108:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:314:32:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  314 |           for (size_t i = 0; [01;35m[Ki < parameters_.ray_cast_num_thread_[m[K; ++i) {
      |                              [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[ 90%] Built target fiesta
/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h: In instantiation of â€˜[01m[Kvoid fiesta::Fiesta<DepthMsgType, PoseMsgType>::RaycastProcess(int, int, int) [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:310:11:[m[K   required from â€˜[01m[Kvoid fiesta::Fiesta<DepthMsgType, PoseMsgType>::RaycastMultithread() [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:475:11:[m[K   required from â€˜[01m[Kvoid fiesta::Fiesta<DepthMsgType, PoseMsgType>::SynchronizationAndProcess() [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:518:6:[m[K   required from â€˜[01m[Kvoid fiesta::Fiesta<DepthMsgType, PoseMsgType>::DepthCallback(const DepthMsgType&) [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:130:46:[m[K   required from â€˜[01m[Kfiesta::Fiesta<DepthMsgType, PoseMsgType>::Fiesta(ros::NodeHandle, tf::TransformListener*) [with DepthMsgType = boost::shared_ptr<const sensor_msgs::Image_<std::allocator<void> > >; PoseMsgType = boost::shared_ptr<const geometry_msgs::TransformStamped_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/test/test_fiesta.cpp:7:108:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/FIESTA/include/Fiesta.h:217:19:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<pcl::PointXYZ, Eigen::aligned_allocator<pcl::PointXYZ> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  217 |           if ([01;35m[Kidx > cloud_.points.size()[m[K)
      |               [01;35m[K~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
[100%] [32m[1mLinking CXX executable /home/matt/catkin_ws/devel/.private/fiesta/lib/fiesta/test_fiesta[0m
[100%] Built target test_fiesta
