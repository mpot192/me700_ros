[35m[1mScanning dependencies of target bspline_opt_test[0m
[35m[1mScanning dependencies of target path_opt[0m
[ 20%] [32mBuilding CXX object CMakeFiles/path_opt.dir/src/bspline_opt.cpp.o[0m
[ 60%] [32mBuilding CXX object CMakeFiles/bspline_opt_test.dir/src/bspline_opt.cpp.o[0m
[ 60%] [32mBuilding CXX object CMakeFiles/bspline_opt_test.dir/src/test_bspline_opt.cpp.o[0m
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/test_bspline_opt.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/test_bspline_opt.cpp:331:34:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%i[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Kstd::vector<Eigen::Matrix<double, -1, 1> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  331 |         printf("Bspline of size [01;35m[K%i[m[K pushed\n", [32m[Kd.size()[m[K);
      |                                 [01;35m[K~^[m[K            [32m[K~~~~~~~~[m[K
      |                                  [01;35m[K|[m[K                  [32m[K|[m[K
      |                                  [01;35m[Kint[m[K                [32m[Kstd::vector<Eigen::Matrix<double, -1, 1> >::size_type {aka long unsigned int}[m[K
      |                                 [32m[K%li[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/test_bspline_opt.cpp:380:27:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%i[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[KEigen::Index[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  380 |         printf("Bspline: [01;35m[K%i[m[K\n", [32m[Kopt_control_points.rows()[m[K);
      |                          [01;35m[K~^[m[K     [32m[K~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                           [01;35m[K|[m[K                            [32m[K|[m[K
      |                           [01;35m[Kint[m[K                          [32m[KEigen::Index {aka long int}[m[K
      |                          [32m[K%li[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:[m[K In member function â€˜[01m[Kbool bspline_opt::trajectory_optimize(std::vector<std::vector<Eigen::Matrix<double, 3, 1> > >*, std::vector<double>&, int)[m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:972:30:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%i[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  972 |             printf("Bspline [01;35m[K%i[m[K\n", [32m[Kj[m[K);
      |                             [01;35m[K~^[m[K     [32m[K~[m[K
      |                              [01;35m[K|[m[K     [32m[K|[m[K
      |                              [01;35m[Kint[m[K   [32m[Ksize_t {aka long unsigned int}[m[K
      |                             [32m[K%li[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:[m[K In member function â€˜[01m[Kbool bspline_opt::trajectory_optimize(std::vector<std::vector<Eigen::Matrix<double, 3, 1> > >*, std::vector<double>&, int)[m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:972:30:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%i[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  972 |             printf("Bspline [01;35m[K%i[m[K\n", [32m[Kj[m[K);
      |                             [01;35m[K~^[m[K     [32m[K~[m[K
      |                              [01;35m[K|[m[K     [32m[K|[m[K
      |                              [01;35m[Kint[m[K   [32m[Ksize_t {aka long unsigned int}[m[K
      |                             [32m[K%li[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:[m[K In member function â€˜[01m[KOPTIMIZATION_STATUS bspline_opt::optimize()[m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:1015:18:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%i[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Kstd::vector<std::vector<Eigen::Matrix<double, 3, 1> > >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
 1015 |     printf("Got [01;35m[K%i[m[K B-Splines for optimization\n", [32m[Kpoint_vec.size()[m[K);
      |                 [01;35m[K~^[m[K                                [32m[K~~~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K                                              [32m[K|[m[K
      |                  [01;35m[Kint[m[K                                            [32m[Kstd::vector<std::vector<Eigen::Matrix<double, 3, 1> > >::size_type {aka long unsigned int}[m[K
      |                 [32m[K%li[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:[m[K In member function â€˜[01m[KOPTIMIZATION_STATUS bspline_opt::optimize()[m[Kâ€™:
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:1015:18:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%i[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Kstd::vector<std::vector<Eigen::Matrix<double, 3, 1> > >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
 1015 |     printf("Got [01;35m[K%i[m[K B-Splines for optimization\n", [32m[Kpoint_vec.size()[m[K);
      |                 [01;35m[K~^[m[K                                [32m[K~~~~~~~~~~~~~~~~[m[K
      |                  [01;35m[K|[m[K                                              [32m[K|[m[K
      |                  [01;35m[Kint[m[K                                            [32m[Kstd::vector<std::vector<Eigen::Matrix<double, 3, 1> > >::size_type {aka long unsigned int}[m[K
      |                 [32m[K%li[m[K
/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp: In instantiation of â€˜[01m[Kbool SpeedConstraint::operator()(const T*, const T*, const T*, T*) const [with T = ceres::Jet<double, 7>][m[Kâ€™:
[01m[K/usr/include/ceres/internal/variadic_evaluate.h:156:19:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::VariadicEvaluate<Functor, T, N0, N1, N2, 0, 0, 0, 0, 0, 0, 0>::Call(const Functor&, const T* const*, T*) [with Functor = SpeedConstraint; T = ceres::Jet<double, 7>; int N0 = 3; int N1 = 3; int N2 = 1][m[Kâ€™
[01m[K/usr/include/ceres/internal/autodiff.h:289:72:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::AutoDiff<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Differentiate(const Functor&, const T* const*, int, T*, T**) [with Functor = SpeedConstraint; T = double; int N0 = 3; int N1 = 3; int N2 = 1; int N3 = 0; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:211:66:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = SpeedConstraint; int kNumResiduals = 1; int N0 = 3; int N1 = 3; int N2 = 1; int N3 = 0; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:202:16:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:365:21:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%f[m[Kâ€™ expects argument of type â€˜[01m[Kdouble[m[Kâ€™, but argument 2 has type â€˜[01m[Kceres::Jet<double, 7>[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  365 |         DEBUG_PRINT([01;35m[K"Vel err: %f\n"[m[K, vel_diff);
      |                     [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:10:63:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KDEBUG_PRINT[m[Kâ€™
   10 | #define DEBUG_PRINT(fmt, ...) do{ if(ENABLE_DEBUG_MSG) printf([01;36m[Kfmt[m[K, __VA_ARGS__); } while(0)
      |                                                               [01;36m[K^~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:365:32:[m[K [01;36m[Knote: [m[Kformat string is defined here
  365 |         DEBUG_PRINT("Vel err: [01;36m[K%f[m[K\n", vel_diff);
      |                               [01;36m[K~^[m[K
      |                                [01;36m[K|[m[K
      |                                [01;36m[Kdouble[m[K
/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp: In instantiation of â€˜[01m[Kbool InitialAccelerationConstraint::operator()(const T*, const T*, const T*, T*) const [with T = ceres::Jet<double, 7>][m[Kâ€™:
[01m[K/usr/include/ceres/internal/variadic_evaluate.h:156:19:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::VariadicEvaluate<Functor, T, N0, N1, N2, 0, 0, 0, 0, 0, 0, 0>::Call(const Functor&, const T* const*, T*) [with Functor = InitialAccelerationConstraint; T = ceres::Jet<double, 7>; int N0 = 3; int N1 = 3; int N2 = 1][m[Kâ€™
[01m[K/usr/include/ceres/internal/autodiff.h:289:72:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::AutoDiff<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Differentiate(const Functor&, const T* const*, int, T*, T**) [with Functor = InitialAccelerationConstraint; T = double; int N0 = 3; int N1 = 3; int N2 = 1; int N3 = 0; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:211:66:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = InitialAccelerationConstraint; int kNumResiduals = 6; int N0 = 3; int N1 = 3; int N2 = 1; int N3 = 0; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:202:16:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:263:21:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%f[m[Kâ€™ expects argument of type â€˜[01m[Kdouble[m[Kâ€™, but argument 2 has type â€˜[01m[Kconst ceres::Jet<double, 7>[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  263 |         DEBUG_PRINT([01;35m[K"Interval: %f\n"[m[K, interval[0]);
      |                     [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:10:63:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KDEBUG_PRINT[m[Kâ€™
   10 | #define DEBUG_PRINT(fmt, ...) do{ if(ENABLE_DEBUG_MSG) printf([01;36m[Kfmt[m[K, __VA_ARGS__); } while(0)
      |                                                               [01;36m[K^~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:263:33:[m[K [01;36m[Knote: [m[Kformat string is defined here
  263 |         DEBUG_PRINT("Interval: [01;36m[K%f[m[K\n", interval[0]);
      |                                [01;36m[K~^[m[K
      |                                 [01;36m[K|[m[K
      |                                 [01;36m[Kdouble[m[K
/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp: In instantiation of â€˜[01m[Kbool SpeedConstraint::operator()(const T*, const T*, const T*, T*) const [with T = ceres::Jet<double, 7>][m[Kâ€™:
[01m[K/usr/include/ceres/internal/variadic_evaluate.h:156:19:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::VariadicEvaluate<Functor, T, N0, N1, N2, 0, 0, 0, 0, 0, 0, 0>::Call(const Functor&, const T* const*, T*) [with Functor = SpeedConstraint; T = ceres::Jet<double, 7>; int N0 = 3; int N1 = 3; int N2 = 1][m[Kâ€™
[01m[K/usr/include/ceres/internal/autodiff.h:289:72:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::AutoDiff<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Differentiate(const Functor&, const T* const*, int, T*, T**) [with Functor = SpeedConstraint; T = double; int N0 = 3; int N1 = 3; int N2 = 1; int N3 = 0; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:211:66:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = SpeedConstraint; int kNumResiduals = 1; int N0 = 3; int N1 = 3; int N2 = 1; int N3 = 0; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:202:16:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:365:21:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%f[m[Kâ€™ expects argument of type â€˜[01m[Kdouble[m[Kâ€™, but argument 2 has type â€˜[01m[Kceres::Jet<double, 7>[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  365 |         DEBUG_PRINT([01;35m[K"Vel err: %f\n"[m[K, vel_diff);
      |                     [01;35m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:10:63:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KDEBUG_PRINT[m[Kâ€™
   10 | #define DEBUG_PRINT(fmt, ...) do{ if(ENABLE_DEBUG_MSG) printf([01;36m[Kfmt[m[K, __VA_ARGS__); } while(0)
      |                                                               [01;36m[K^~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:365:32:[m[K [01;36m[Knote: [m[Kformat string is defined here
  365 |         DEBUG_PRINT("Vel err: [01;36m[K%f[m[K\n", vel_diff);
      |                               [01;36m[K~^[m[K
      |                                [01;36m[K|[m[K
      |                                [01;36m[Kdouble[m[K
/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp: In instantiation of â€˜[01m[Kbool InitialAccelerationConstraint::operator()(const T*, const T*, const T*, T*) const [with T = ceres::Jet<double, 7>][m[Kâ€™:
[01m[K/usr/include/ceres/internal/variadic_evaluate.h:156:19:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::VariadicEvaluate<Functor, T, N0, N1, N2, 0, 0, 0, 0, 0, 0, 0>::Call(const Functor&, const T* const*, T*) [with Functor = InitialAccelerationConstraint; T = ceres::Jet<double, 7>; int N0 = 3; int N1 = 3; int N2 = 1][m[Kâ€™
[01m[K/usr/include/ceres/internal/autodiff.h:289:72:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::AutoDiff<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Differentiate(const Functor&, const T* const*, int, T*, T**) [with Functor = InitialAccelerationConstraint; T = double; int N0 = 3; int N1 = 3; int N2 = 1; int N3 = 0; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:211:66:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = InitialAccelerationConstraint; int kNumResiduals = 6; int N0 = 3; int N1 = 3; int N2 = 1; int N3 = 0; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:202:16:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:263:21:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%f[m[Kâ€™ expects argument of type â€˜[01m[Kdouble[m[Kâ€™, but argument 2 has type â€˜[01m[Kconst ceres::Jet<double, 7>[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  263 |         DEBUG_PRINT([01;35m[K"Interval: %f\n"[m[K, interval[0]);
      |                     [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:10:63:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KDEBUG_PRINT[m[Kâ€™
   10 | #define DEBUG_PRINT(fmt, ...) do{ if(ENABLE_DEBUG_MSG) printf([01;36m[Kfmt[m[K, __VA_ARGS__); } while(0)
      |                                                               [01;36m[K^~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:263:33:[m[K [01;36m[Knote: [m[Kformat string is defined here
  263 |         DEBUG_PRINT("Interval: [01;36m[K%f[m[K\n", interval[0]);
      |                                [01;36m[K~^[m[K
      |                                 [01;36m[K|[m[K
      |                                 [01;36m[Kdouble[m[K
/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp: In instantiation of â€˜[01m[Kbool SpliceAccelerationConstraint::operator()(const T*, const T*, const T*, const T*, const T*, T*) const [with T = ceres::Jet<double, 11>][m[Kâ€™:
[01m[K/usr/include/ceres/internal/variadic_evaluate.h:133:19:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, 0, 0, 0, 0, 0>::Call(const Functor&, const T* const*, T*) [with Functor = SpliceAccelerationConstraint; T = ceres::Jet<double, 11>; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 1][m[Kâ€™
[01m[K/usr/include/ceres/internal/autodiff.h:289:72:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::AutoDiff<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Differentiate(const Functor&, const T* const*, int, T*, T**) [with Functor = SpliceAccelerationConstraint; T = double; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 1; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:211:66:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = SpliceAccelerationConstraint; int kNumResiduals = 6; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 1; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:202:16:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:201:21:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%f[m[Kâ€™ expects argument of type â€˜[01m[Kdouble[m[Kâ€™, but argument 2 has type â€˜[01m[Kconst ceres::Jet<double, 11>[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  201 |         DEBUG_PRINT([01;35m[K"Interval: %f\n"[m[K, interval1[0]);
      |                     [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:10:63:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KDEBUG_PRINT[m[Kâ€™
   10 | #define DEBUG_PRINT(fmt, ...) do{ if(ENABLE_DEBUG_MSG) printf([01;36m[Kfmt[m[K, __VA_ARGS__); } while(0)
      |                                                               [01;36m[K^~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:201:33:[m[K [01;36m[Knote: [m[Kformat string is defined here
  201 |         DEBUG_PRINT("Interval: [01;36m[K%f[m[K\n", interval1[0]);
      |                                [01;36m[K~^[m[K
      |                                 [01;36m[K|[m[K
      |                                 [01;36m[Kdouble[m[K
/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp: In instantiation of â€˜[01m[Kbool SpliceAccelerationConstraint::operator()(const T*, const T*, const T*, const T*, const T*, T*) const [with T = ceres::Jet<double, 11>][m[Kâ€™:
[01m[K/usr/include/ceres/internal/variadic_evaluate.h:133:19:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, 0, 0, 0, 0, 0>::Call(const Functor&, const T* const*, T*) [with Functor = SpliceAccelerationConstraint; T = ceres::Jet<double, 11>; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 1][m[Kâ€™
[01m[K/usr/include/ceres/internal/autodiff.h:289:72:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::AutoDiff<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Differentiate(const Functor&, const T* const*, int, T*, T**) [with Functor = SpliceAccelerationConstraint; T = double; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 1; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:211:66:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = SpliceAccelerationConstraint; int kNumResiduals = 6; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 1; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:202:16:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:201:21:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%f[m[Kâ€™ expects argument of type â€˜[01m[Kdouble[m[Kâ€™, but argument 2 has type â€˜[01m[Kconst ceres::Jet<double, 11>[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  201 |         DEBUG_PRINT([01;35m[K"Interval: %f\n"[m[K, interval1[0]);
      |                     [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:10:63:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KDEBUG_PRINT[m[Kâ€™
   10 | #define DEBUG_PRINT(fmt, ...) do{ if(ENABLE_DEBUG_MSG) printf([01;36m[Kfmt[m[K, __VA_ARGS__); } while(0)
      |                                                               [01;36m[K^~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:201:33:[m[K [01;36m[Knote: [m[Kformat string is defined here
  201 |         DEBUG_PRINT("Interval: [01;36m[K%f[m[K\n", interval1[0]);
      |                                [01;36m[K~^[m[K
      |                                 [01;36m[K|[m[K
      |                                 [01;36m[Kdouble[m[K
/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp: In instantiation of â€˜[01m[Kbool AccelerationConstraint::operator()(const T*, const T*, const T*, const T*, T*) const [with T = ceres::Jet<double, 10>][m[Kâ€™:
[01m[K/usr/include/ceres/internal/variadic_evaluate.h:145:19:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::VariadicEvaluate<Functor, T, N0, N1, N2, N3, 0, 0, 0, 0, 0, 0>::Call(const Functor&, const T* const*, T*) [with Functor = AccelerationConstraint; T = ceres::Jet<double, 10>; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1][m[Kâ€™
[01m[K/usr/include/ceres/internal/autodiff.h:289:72:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::AutoDiff<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Differentiate(const Functor&, const T* const*, int, T*, T**) [with Functor = AccelerationConstraint; T = double; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:211:66:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = AccelerationConstraint; int kNumResiduals = 6; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:202:16:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:135:21:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%f[m[Kâ€™ expects argument of type â€˜[01m[Kdouble[m[Kâ€™, but argument 2 has type â€˜[01m[Kconst ceres::Jet<double, 10>[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  135 |         DEBUG_PRINT([01;35m[K"Interval: %f\n"[m[K, interval[0]);
      |                     [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:10:63:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KDEBUG_PRINT[m[Kâ€™
   10 | #define DEBUG_PRINT(fmt, ...) do{ if(ENABLE_DEBUG_MSG) printf([01;36m[Kfmt[m[K, __VA_ARGS__); } while(0)
      |                                                               [01;36m[K^~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:135:33:[m[K [01;36m[Knote: [m[Kformat string is defined here
  135 |         DEBUG_PRINT("Interval: [01;36m[K%f[m[K\n", interval[0]);
      |                                [01;36m[K~^[m[K
      |                                 [01;36m[K|[m[K
      |                                 [01;36m[Kdouble[m[K
/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp: In instantiation of â€˜[01m[Kbool AccelerationConstraint::operator()(const T*, const T*, const T*, const T*, T*) const [with T = ceres::Jet<double, 10>][m[Kâ€™:
[01m[K/usr/include/ceres/internal/variadic_evaluate.h:145:19:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::VariadicEvaluate<Functor, T, N0, N1, N2, N3, 0, 0, 0, 0, 0, 0>::Call(const Functor&, const T* const*, T*) [with Functor = AccelerationConstraint; T = ceres::Jet<double, 10>; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1][m[Kâ€™
[01m[K/usr/include/ceres/internal/autodiff.h:289:72:[m[K   required from â€˜[01m[Kstatic bool ceres::internal::AutoDiff<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Differentiate(const Functor&, const T* const*, int, T*, T**) [with Functor = AccelerationConstraint; T = double; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:211:66:[m[K   required from â€˜[01m[Kbool ceres::AutoDiffCostFunction<CostFunctor, kNumResiduals, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9>::Evaluate(const double* const*, double*, double**) const [with CostFunctor = AccelerationConstraint; int kNumResiduals = 6; int N0 = 3; int N1 = 3; int N2 = 3; int N3 = 1; int N4 = 0; int N5 = 0; int N6 = 0; int N7 = 0; int N8 = 0; int N9 = 0][m[Kâ€™
[01m[K/usr/include/ceres/autodiff_cost_function.h:202:16:[m[K   required from here
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:135:21:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%f[m[Kâ€™ expects argument of type â€˜[01m[Kdouble[m[Kâ€™, but argument 2 has type â€˜[01m[Kconst ceres::Jet<double, 10>[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  135 |         DEBUG_PRINT([01;35m[K"Interval: %f\n"[m[K, interval[0]);
      |                     [01;35m[K^~~~~~~~~~~~~~~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:10:63:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KDEBUG_PRINT[m[Kâ€™
   10 | #define DEBUG_PRINT(fmt, ...) do{ if(ENABLE_DEBUG_MSG) printf([01;36m[Kfmt[m[K, __VA_ARGS__); } while(0)
      |                                                               [01;36m[K^~~[m[K
[01m[K/home/matt/catkin_ws/src/survey_planner/path_opt/src/bspline_opt.cpp:135:33:[m[K [01;36m[Knote: [m[Kformat string is defined here
  135 |         DEBUG_PRINT("Interval: [01;36m[K%f[m[K\n", interval[0]);
      |                                [01;36m[K~^[m[K
      |                                 [01;36m[K|[m[K
      |                                 [01;36m[Kdouble[m[K
[ 80%] [32m[1mLinking CXX executable /home/matt/catkin_ws/devel/.private/path_opt/lib/path_opt/bspline_opt_test[0m
[100%] [32m[1mLinking CXX shared library /home/matt/catkin_ws/devel/.private/path_opt/lib/libpath_opt.so[0m
[100%] Built target bspline_opt_test
[100%] Built target path_opt
